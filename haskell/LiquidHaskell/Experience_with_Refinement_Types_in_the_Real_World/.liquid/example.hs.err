{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":11,"endLine":11,"endCol":12,"startCol":10,"filename":"/home/liquid/example.hs"},"realSpan":true},[["hi","{hi : Int | lo <= hi}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":10,"startCol":8,"filename":"/home/liquid/example.hs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Bool | v <=> x1 <= x2}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":13,"startCol":5,"filename":"/home/liquid/example.hs"},"realSpan":true},[["lq_anf$##7205759403792799849","{v : Bool | v <=> lo <= hi}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/liquid/example.hs"},"realSpan":true},[["Main.$trModule","Module"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":26,"startCol":21,"filename":"/home/liquid/example.hs"},"realSpan":true},[["Main.range","x1:Int -> x2:{hi : Int | x1 <= hi} -> [{v : Int | x1 <= v\n                                                  && v < x2}]"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":34,"startCol":28,"filename":"/home/liquid/example.hs"},"realSpan":true},[["lq_anf$##7205759403792799852","Int"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":38,"startCol":21,"filename":"/home/liquid/example.hs"},"realSpan":true},[["lq_anf$##7205759403792799853","[{v : Int | v < hi}]"]]],[{"spanInfo":{"startLine":11,"endLine":11,"endCol":6,"startCol":1,"filename":"/home/liquid/example.hs"},"realSpan":true},[["Main.range","x1:Int -> x2:{hi : Int | x1 <= hi} -> [{v : Int | x1 <= v\n                                                  && v < x2}]"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":32,"startCol":31,"filename":"/home/liquid/example.hs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":11,"endLine":11,"endCol":9,"startCol":7,"filename":"/home/liquid/example.hs"},"realSpan":true},[["lo","Int"]]]],"o_templs":[[{"spanInfo":{"startLine":11,"endLine":11,"endCol":12,"startCol":10,"filename":"/home/liquid/example.hs"},"realSpan":true},[["hi","{hi : Int | lo##aw4 <= hi}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":10,"startCol":8,"filename":"/home/liquid/example.hs"},"realSpan":true},[[null,"lq_tmp$x##176:{lq_tmp$x##181 : Int^\"lq_tmp$x##180\" | $k_##179[VV##178:=lq_tmp$x##181][lq_tmp$x##175:=GHC.Classes.$fOrdInt]} -> lq_tmp$x##177:{lq_tmp$x##181 : Int^\"lq_tmp$x##180\" | $k_##179[VV##178:=lq_tmp$x##181][lq_tmp$x##175:=GHC.Classes.$fOrdInt]} -> {lq_tmp$x##171 : Bool | lq_tmp$x##171 <=> lq_tmp$x##176 <= lq_tmp$x##177}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":13,"startCol":5,"filename":"/home/liquid/example.hs"},"realSpan":true},[["lq_anf$##7205759403792799849","{lq_tmp$x##171 : Bool | lq_tmp$x##171 <=> lo##aw4 <= hi##aw5}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/liquid/example.hs"},"realSpan":true},[["Main.$trModule","Module"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":26,"startCol":21,"filename":"/home/liquid/example.hs"},"realSpan":true},[["Main.range","lq_tmp$x##161:Int -> lq_tmp$x##162:{hi : Int | lq_tmp$x##161 <= hi} -> [{v : Int | lq_tmp$x##161 <= v\n                                                                                   && v < lq_tmp$x##162}]"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":34,"startCol":28,"filename":"/home/liquid/example.hs"},"realSpan":true},[["lq_anf$##7205759403792799852","{lq_tmp$x##236 : Int^\"lq_tmp$x##235\" | lq_tmp$x##236 == lo##aw4 + lq_anf$##7205759403792799851##d1CP}"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":38,"startCol":21,"filename":"/home/liquid/example.hs"},"realSpan":true},[["lq_anf$##7205759403792799853","[{v : Int | lq_anf$##7205759403792799852##d1CQ <= v\n            && v < hi##aw5}]"]]],[{"spanInfo":{"startLine":11,"endLine":11,"endCol":6,"startCol":1,"filename":"/home/liquid/example.hs"},"realSpan":true},[["Main.range","lq_tmp$x##161:Int -> lq_tmp$x##162:{hi : Int | lq_tmp$x##161 <= hi} -> [{v : Int | lq_tmp$x##161 <= v\n                                                                                   && v < lq_tmp$x##162}]"]]],[{"spanInfo":{"startLine":12,"endLine":12,"endCol":32,"startCol":31,"filename":"/home/liquid/example.hs"},"realSpan":true},[[null,"lq_tmp$x##233:Int -> lq_tmp$x##234:Int -> {lq_tmp$x##236 : Int^\"lq_tmp$x##235\" | lq_tmp$x##236 == lq_tmp$x##233 + lq_tmp$x##234}"]]],[{"spanInfo":{"startLine":11,"endLine":11,"endCol":9,"startCol":7,"filename":"/home/liquid/example.hs"},"realSpan":true},[["lo","Int"]]]],"o_bots":[],"o_result":{"tag":"Unsafe","contents":[{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : Int\n \n  not a subtype of Required type\n    VV : {VV : Int | lo <= VV\n                     && VV < hi}\n \n  In Context\n    hi : {hi : Int | lo <= hi}\n     \n    lo : Int","pos":{"spanInfo":{"startLine":11,"endLine":11,"endCol":6,"startCol":1,"filename":"/home/liquid/example.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : Int | lo <= v\n                    && v == hi}\n \n  not a subtype of Required type\n    VV : {VV : Int | ?b <= VV}\n \n  In Context\n    hi : {hi : Int | lo <= hi}\n     \n    ?b : {?b : Int | ?b == lo + ?a}\n     \n    lo : Int\n     \n    ?a : {?a : Int | ?a == (1 : int)}","pos":{"spanInfo":{"startLine":12,"endLine":12,"endCol":38,"startCol":21,"filename":"/home/liquid/example.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : Int | v == lo + ?a\n                    && v == ?b}\n \n  not a subtype of Required type\n    VV : {VV : Int | VV < lo\n                     && VV >= 0}\n \n  In Context\n    ?b : {?b : Int | ?b == lo + ?a}\n     \n    lo : Int\n     \n    ?a : {?a : Int | ?a == (1 : int)}","pos":{"spanInfo":{"startLine":12,"endLine":12,"endCol":34,"startCol":28,"filename":"/home/liquid/example.hs"},"realSpan":true}}]}}