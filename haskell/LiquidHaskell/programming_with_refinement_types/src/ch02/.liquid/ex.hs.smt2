(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)
(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort Set () (Array Elt Bool))
(define-fun smt_set_emp () Set ((as const Set) false))
(define-fun smt_set_mem ((x Elt) (s Set)) Bool (select s x))
(define-fun smt_set_add ((s Set) (x Elt)) Set (store s x true))
(define-fun smt_set_cup ((s1 Set) (s2 Set)) Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 Set) (s2 Set)) Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s Set)) Set ((_ map not) s))
(define-fun smt_set_dif ((s1 Set) (s2 Set)) Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 Set) (s2 Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun runFun () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk () Bool)
(declare-fun cast_as_int () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792799266$35$$35$d1to () Bool)
(declare-fun addrLen () Int)
(declare-fun papp5 () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Bool)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq () Bool)
(declare-fun x_Tuple65 () Int)
(declare-fun x_Tuple55 () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun x_Tuple77 () Int)
(declare-fun papp3 () Int)
(declare-fun VV$35$$35$367 () Bool)
(declare-fun x_Tuple63 () Int)
(declare-fun x_Tuple41 () Int)
(declare-fun VV$35$$35$424 () Bool)
(declare-fun GHC.Types.False () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl () Bool)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$12 () Bool)
(declare-fun x_Tuple64 () Int)
(declare-fun VV$35$$35$342 () Bool)
(declare-fun b$35$$35$a1rm () Bool)
(declare-fun a$35$$35$a1rn () Bool)
(declare-fun VV$35$$35$522 () Bool)
(declare-fun ds_d1ta () Bool)
(declare-fun ds_d1t1 () Bool)
(declare-fun VV$35$$35$383 () Bool)
(declare-fun lq_tmp$36$x$35$$35$179 () Bool)
(declare-fun autolen () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Bool)
(declare-fun x_Tuple52 () Int)
(declare-fun head () Int)
(declare-fun lq_tmp$36$x$35$$35$149 () Bool)
(declare-fun VV$35$$35$478 () Bool)
(declare-fun b$35$$35$a1rk () Bool)
(declare-fun VV$35$$35$461 () Bool)
(declare-fun papp2 () Int)
(declare-fun VV$35$$35$F$35$$35$14 () Bool)
(declare-fun x_Tuple62 () Int)
(declare-fun VV$35$$35$496 () Bool)
(declare-fun lit$36$Main () Str)
(declare-fun VV$35$$35$327 () Bool)
(declare-fun lq_tmp$36$x$35$$35$230 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr () Bool)
(declare-fun lit$36$main () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792799265$35$$35$d1tn () Bool)
(declare-fun fromJust () Int)
(declare-fun VV$35$$35$305 () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Bool)
(declare-fun papp7 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Bool)
(declare-fun VV$35$$35$F$35$$35$7 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792799275$35$$35$d1tx () Int)
(declare-fun x_Tuple53 () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun x_Tuple71 () Int)
(declare-fun VV$35$$35$515 () Bool)
(declare-fun ds_d1t0 () Bool)
(declare-fun VV$35$$35$408 () Bool)
(declare-fun VV$35$$35$F$35$$35$2 () Bool)
(declare-fun GHC.Types.GT () Int)
(declare-fun x_Tuple74 () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Bool)
(declare-fun VV$35$$35$F$35$$35$10 () Bool)
(declare-fun x_Tuple22 () Int)
(declare-fun x_Tuple66 () Int)
(declare-fun x_Tuple44 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792799270$35$$35$d1ts () Bool)
(declare-fun b$35$$35$a1ro () Bool)
(declare-fun a$35$$35$a1rl () Bool)
(declare-fun VV$35$$35$471 () Bool)
(declare-fun VV$35$$35$376 () Bool)
(declare-fun VV$35$$35$468 () Bool)
(declare-fun x_Tuple72 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp () Bool)
(declare-fun VV$35$$35$417 () Bool)
(declare-fun isJust () Int)
(declare-fun VV$35$$35$F$35$$35$4 () Bool)
(declare-fun Main.$36$trModule () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun x_Tuple75 () Int)
(declare-fun VV$35$$35$386 () Bool)
(declare-fun b$35$$35$awa () Bool)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun VV$35$$35$F$35$$35$3 () Bool)
(declare-fun papp1 () Int)
(declare-fun x_Tuple61 () Int)
(declare-fun x_Tuple43 () Int)
(declare-fun Main.ex0 () Bool)
(declare-fun VV$35$$35$505 () Bool)
(declare-fun tail () Int)
(declare-fun ds_d1t9 () Bool)
(declare-fun VV$35$$35$434 () Bool)
(declare-fun VV$35$$35$452 () Bool)
(declare-fun VV$35$$35$F$35$$35$5 () Bool)
(declare-fun x_Tuple51 () Int)
(declare-fun x_Tuple73 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun VV$35$$35$512 () Bool)
(declare-fun lq_tmp$36$x$35$$35$119 () Bool)
(declare-fun x_Tuple54 () Int)
(declare-fun VV$35$$35$349 () Bool)
(declare-fun x_Tuple32 () Int)
(declare-fun x_Tuple76 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792799271$35$$35$d1tt () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792799273$35$$35$d1tv () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun x_Tuple42 () Int)
(declare-fun VV$35$$35$320 () Bool)
(declare-fun VV$35$$35$427 () Bool)
(declare-fun VV$35$$35$393 () Bool)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)
(assert (distinct lit$36$main lit$36$Main))
(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$Main) 4))
(assert (= (strLen lit$36$main) 4))
(push 1)
(assert (and Main.ex0 (= VV$35$$35$F$35$$35$2 (and b$35$$35$a1rk lq_anf$36$$35$$35$7205759403792799271$35$$35$d1tt)) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792799271$35$$35$d1tt (not b$35$$35$a1rk)) GHC.Types.True (not GHC.Types.False) GHC.Types.True))
(push 1)
(assert (not (not VV$35$$35$F$35$$35$2)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and Main.ex0 (= lq_anf$36$$35$$35$7205759403792799270$35$$35$d1ts (not b$35$$35$awa)) (= VV$35$$35$F$35$$35$3 (or  b$35$$35$awa lq_anf$36$$35$$35$7205759403792799270$35$$35$d1ts)) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True))
(push 1)
(assert (not VV$35$$35$F$35$$35$3))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and VV$35$$35$F$35$$35$4 (= VV$35$$35$F$35$$35$4 GHC.Types.True)) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True))
(push 1)
(assert (not VV$35$$35$F$35$$35$4))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr ds_d1t1) (and (= lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr ds_d1t1) lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr) (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) (not GHC.Types.False) (and VV$35$$35$F$35$$35$5 (= VV$35$$35$F$35$$35$5 GHC.Types.True)) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) (and (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp) (= lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr ds_d1t1)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$5 (= ds_d1t0 ds_d1t1))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr ds_d1t1) (and (= lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr ds_d1t1) (not lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr) (not lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr) (not lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr)) (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) (not GHC.Types.False) GHC.Types.True (and (not VV$35$$35$F$35$$35$6) (= VV$35$$35$F$35$$35$6 GHC.Types.False)) (not GHC.Types.False) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) (and (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp) (= lq_anf$36$$35$$35$7205759403792799269$35$$35$d1tr ds_d1t1)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$6 (= ds_d1t0 ds_d1t1))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) (and (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) (not lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp) (not lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp) (not lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp)) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq ds_d1t1) GHC.Types.True (not GHC.Types.False) (and (not VV$35$$35$F$35$$35$7) (= VV$35$$35$F$35$$35$7 GHC.Types.False)) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq ds_d1t1) (and (= lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq ds_d1t1) lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$7 (= ds_d1t0 ds_d1t1))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) (and (= lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp ds_d1t0) (not lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp) (not lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp) (not lq_anf$36$$35$$35$7205759403792799267$35$$35$d1tp)) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq ds_d1t1) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq ds_d1t1) (not GHC.Types.False) (and (= lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq ds_d1t1) (not lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq) (not lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq) (not lq_anf$36$$35$$35$7205759403792799268$35$$35$d1tq)) GHC.Types.True (and VV$35$$35$F$35$$35$8 (= VV$35$$35$F$35$$35$8 GHC.Types.True))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$8 (= ds_d1t0 ds_d1t1))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792799266$35$$35$d1to (and a$35$$35$a1rn b$35$$35$a1ro)) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= VV$35$$35$F$35$$35$9 (=> lq_anf$36$$35$$35$7205759403792799266$35$$35$d1to b$35$$35$a1ro))))
(push 1)
(assert (not VV$35$$35$F$35$$35$9))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= VV$35$$35$F$35$$35$10 (=> lq_anf$36$$35$$35$7205759403792799265$35$$35$d1tn a$35$$35$a1rl)) (= lq_anf$36$$35$$35$7205759403792799265$35$$35$d1tn (and a$35$$35$a1rl b$35$$35$a1rm))))
(push 1)
(assert (not VV$35$$35$F$35$$35$10))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9) (and (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9) lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm ds_d1ta) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm ds_d1ta) (and (= lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm ds_d1ta) lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm) (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9) (and VV$35$$35$F$35$$35$11 (= VV$35$$35$F$35$$35$11 GHC.Types.True))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 (=> ds_d1t9 ds_d1ta))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9) (and (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9) lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm ds_d1ta) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm ds_d1ta) (not GHC.Types.False) (and (= lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm ds_d1ta) (not lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm) (not lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm) (not lq_anf$36$$35$$35$7205759403792799264$35$$35$d1tm)) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9) (and (not VV$35$$35$F$35$$35$12) (= VV$35$$35$F$35$$35$12 GHC.Types.False))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$12 (=> ds_d1t9 ds_d1ta))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9) (not lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk) (not lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk) (not lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk)) (and VV$35$$35$F$35$$35$13 (= VV$35$$35$F$35$$35$13 GHC.Types.True)) (= lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl ds_d1ta) (= lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl ds_d1ta) (and (= lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl ds_d1ta) lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9) (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$13 (=> ds_d1t9 ds_d1ta))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9) (not lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk) (not lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk) (not lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk)) (= lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl ds_d1ta) (and VV$35$$35$F$35$$35$14 (= VV$35$$35$F$35$$35$14 GHC.Types.True)) (= lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl ds_d1ta) (and (= lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl ds_d1ta) (not lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl) (not lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl) (not lq_anf$36$$35$$35$7205759403792799263$35$$35$d1tl)) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9) (= lq_anf$36$$35$$35$7205759403792799262$35$$35$d1tk ds_d1t9)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$14 (=> ds_d1t9 ds_d1ta))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(exit)
