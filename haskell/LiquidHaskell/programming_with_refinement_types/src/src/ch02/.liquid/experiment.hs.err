{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch02/experiment.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":25,"endLine":25,"endCol":2,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch02/experiment.hs"},"realSpan":true},[["Main.t","{VV : GHC.Types.Bool | (false => (true => false))\n                       && (true <=> true)\n                       && (true => true)\n                       && VV}"]]],[{"spanInfo":{"startLine":38,"endLine":38,"endCol":2,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch02/experiment.hs"},"realSpan":true},[["Main.f","{VV : GHC.Types.Bool | (false => (true => false))\n                       && (true <=> true)\n                       && (true => true)\n                       && not VV}"]]]],"o_templs":[[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch02/experiment.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":25,"endLine":25,"endCol":2,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch02/experiment.hs"},"realSpan":true},[["Main.t","{VV : GHC.Types.Bool | (false => (true => false))\n                       && (true <=> true)\n                       && (true => true)\n                       && (true => true)\n                       && VV}"]]],[{"spanInfo":{"startLine":38,"endLine":38,"endCol":2,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch02/experiment.hs"},"realSpan":true},[["Main.f","{VV : GHC.Types.Bool | (false => (true => false))\n                       && (true <=> true)\n                       && (true => true)\n                       && (true => true)\n                       && not VV}"]]]],"o_bots":[],"o_result":{"tag":"Safe"}}