(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)
(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort Set () (Array Elt Bool))
(define-fun smt_set_emp () Set ((as const Set) false))
(define-fun smt_set_mem ((x Elt) (s Set)) Bool (select s x))
(define-fun smt_set_add ((s Set) (x Elt)) Set (store s x true))
(define-fun smt_set_cup ((s1 Set) (s2 Set)) Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 Set) (s2 Set)) Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s Set)) Set ((_ map not) s))
(define-fun smt_set_dif ((s1 Set) (s2 Set)) Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 Set) (s2 Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun runFun () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801704$35$$35$d26I () Int)
(declare-fun a$35$$35$a1S6 () Bool)
(declare-fun cast_as_int () Int)
(declare-fun VV$35$$35$523 () Bool)
(declare-fun VV$35$$35$639 () Bool)
(declare-fun addrLen () Int)
(declare-fun papp5 () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Bool)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801706$35$$35$d26K () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792801699$35$$35$d26D () Bool)
(declare-fun x_Tuple65 () Int)
(declare-fun ds_d26g () Bool)
(declare-fun VV$35$$35$F$35$$35$1 () Bool)
(declare-fun x_Tuple55 () Int)
(declare-fun VV$35$$35$582 () Bool)
(declare-fun x_Tuple33 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun VV$35$$35$681 () Bool)
(declare-fun x_Tuple77 () Int)
(declare-fun VV$35$$35$632 () Bool)
(declare-fun VV$35$$35$733 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792801703$35$$35$d26H () Int)
(declare-fun papp3 () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Bool)
(declare-fun x_Tuple63 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801698$35$$35$d26C () Bool)
(declare-fun x_Tuple41 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801707$35$$35$d26L () Bool)
(declare-fun GHC.Types.False () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x () Bool)
(declare-fun lq_tmp$36$x$35$$35$332 () Bool)
(declare-fun VV$35$$35$591 () Bool)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$12 () Bool)
(declare-fun x_Tuple64 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r () Bool)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun b$35$$35$a1S9 () Bool)
(declare-fun VV$35$$35$549 () Bool)
(declare-fun VV$35$$35$716 () Bool)
(declare-fun autolen () Int)
(declare-fun x_Tuple52 () Int)
(declare-fun head () Int)
(declare-fun y$35$$35$a1Sb () Int)
(declare-fun VV$35$$35$542 () Bool)
(declare-fun VV$35$$35$726 () Bool)
(declare-fun papp2 () Int)
(declare-fun VV$35$$35$F$35$$35$14 () Bool)
(declare-fun x_Tuple62 () Int)
(declare-fun lit$36$Main () Str)
(declare-fun b$35$$35$a1S7 () Bool)
(declare-fun lit$36$main () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792801695$35$$35$d26z () Bool)
(declare-fun fromJust () Int)
(declare-fun VV$35$$35$723 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792801705$35$$35$d26J () Bool)
(declare-fun lq_tmp$36$x$35$$35$274 () Bool)
(declare-fun VV$35$$35$F$35$$35$8 () Bool)
(declare-fun papp7 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Bool)
(declare-fun VV$35$$35$F$35$$35$7 () Bool)
(declare-fun x_Tuple53 () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun VV$35$$35$449 () Int)
(declare-fun x_Tuple71 () Int)
(declare-fun VV$35$$35$532 () Bool)
(declare-fun lq_tmp$36$x$35$$35$193 () Int)
(declare-fun VV$35$$35$598 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792801697$35$$35$d26B () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792801690$35$$35$d26u () Bool)
(declare-fun lq_tmp$36$x$35$$35$223 () Bool)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w () Bool)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun x_Tuple74 () Int)
(declare-fun VV$35$$35$623 () Bool)
(declare-fun VV$35$$35$539 () Bool)
(declare-fun VV$35$$35$601 () Bool)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Bool)
(declare-fun VV$35$$35$F$35$$35$10 () Bool)
(declare-fun x_Tuple22 () Int)
(declare-fun x_Tuple66 () Int)
(declare-fun x_Tuple44 () Int)
(declare-fun VV$35$$35$667 () Bool)
(declare-fun VV$35$$35$465 () Bool)
(declare-fun VV$35$$35$689 () Bool)
(declare-fun a$35$$35$a1S8 () Bool)
(declare-fun VV$35$$35$468 () Int)
(declare-fun x_Tuple72 () Int)
(declare-fun x$35$$35$a1Sa () Int)
(declare-fun isJust () Int)
(declare-fun b$35$$35$aRk () Int)
(declare-fun lq_tmp$36$x$35$$35$445 () Int)
(declare-fun Main.$36$trModule () Int)
(declare-fun VV$35$$35$508 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun ds_d265 () Bool)
(declare-fun x_Tuple75 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t () Bool)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun papp1 () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Bool)
(declare-fun a$35$$35$aRj () Bool)
(declare-fun x_Tuple61 () Int)
(declare-fun x_Tuple43 () Int)
(declare-fun VV$35$$35$707 () Bool)
(declare-fun VV$35$$35$642 () Bool)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s () Bool)
(declare-fun x_Tuple51 () Int)
(declare-fun lq_tmp$36$x$35$$35$163 () Bool)
(declare-fun VV$35$$35$649 () Bool)
(declare-fun x_Tuple73 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792801691$35$$35$d26v () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792801696$35$$35$d26A () Bool)
(declare-fun VV$35$$35$608 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792801701$35$$35$d26F () Int)
(declare-fun ds_d26f () Bool)
(declare-fun x_Tuple54 () Int)
(declare-fun VV$35$$35$475 () Bool)
(declare-fun x_Tuple32 () Int)
(declare-fun ds_d266 () Bool)
(declare-fun x_Tuple76 () Int)
(declare-fun VV$35$$35$458 () Int)
(declare-fun VV$35$$35$F$35$$35$16 () Bool)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun x_Tuple42 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)
(assert (distinct lit$36$main lit$36$Main))
(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$Main) 4))
(assert (= (strLen lit$36$main) 4))
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) (and (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) (not lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r) (not lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r) (not lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r)) (= lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s ds_d26g) (and VV$35$$35$F$35$$35$16 (= VV$35$$35$F$35$$35$16 GHC.Types.True)) (= lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s ds_d26g) (and (= lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s ds_d26g) lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$16 (=> ds_d26f ds_d26g))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792801704$35$$35$d26I 0) (= lq_anf$36$$35$$35$7205759403792801705$35$$35$d26J (<= lq_anf$36$$35$$35$7205759403792801704$35$$35$d26I y$35$$35$a1Sb)) (= VV$35$$35$F$35$$35$1 (=> lq_anf$36$$35$$35$7205759403792801705$35$$35$d26J lq_anf$36$$35$$35$7205759403792801707$35$$35$d26L)) (= lq_anf$36$$35$$35$7205759403792801706$35$$35$d26K (+ x$35$$35$a1Sa y$35$$35$a1Sb)) (= lq_anf$36$$35$$35$7205759403792801707$35$$35$d26L (<= x$35$$35$a1Sa lq_anf$36$$35$$35$7205759403792801706$35$$35$d26K)) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True))
(push 1)
(assert (not VV$35$$35$F$35$$35$1))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) (and (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) (not lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r) (not lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r) (not lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r)) (= lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s ds_d26g) (= lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s ds_d26g) (and (= lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s ds_d26g) (not lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s) (not lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s) (not lq_anf$36$$35$$35$7205759403792801688$35$$35$d26s)) (and VV$35$$35$F$35$$35$17 (= VV$35$$35$F$35$$35$17 GHC.Types.True)) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$17 (=> ds_d26f ds_d26g))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$7 (= lq_anf$36$$35$$35$7205759403792801696$35$$35$d26A lq_anf$36$$35$$35$7205759403792801699$35$$35$d26D)) (= lq_anf$36$$35$$35$7205759403792801695$35$$35$d26z (and a$35$$35$a1S8 b$35$$35$a1S9)) (= lq_anf$36$$35$$35$7205759403792801696$35$$35$d26A (not lq_anf$36$$35$$35$7205759403792801695$35$$35$d26z)) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792801697$35$$35$d26B (not a$35$$35$a1S8)) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792801698$35$$35$d26C (not b$35$$35$a1S9)) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792801699$35$$35$d26D (or  lq_anf$36$$35$$35$7205759403792801697$35$$35$d26B lq_anf$36$$35$$35$7205759403792801698$35$$35$d26C)) GHC.Types.True))
(push 1)
(assert (not VV$35$$35$F$35$$35$7))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265) lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w) (= lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y ds_d266) (= lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y ds_d266) (and (= lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y ds_d266) lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y) (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265) (and VV$35$$35$F$35$$35$8 (= VV$35$$35$F$35$$35$8 GHC.Types.True)) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$8 (= ds_d265 ds_d266))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265) lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w) (= lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y ds_d266) (= lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y ds_d266) (and (= lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y ds_d266) (not lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y) (not lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y) (not lq_anf$36$$35$$35$7205759403792801694$35$$35$d26y)) (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265) (and (not VV$35$$35$F$35$$35$9) (= VV$35$$35$F$35$$35$9 GHC.Types.False)) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$9 (= ds_d265 ds_d266))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265) (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265) (and (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265) (not lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w) (not lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w) (not lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w)) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x ds_d266) (and (not VV$35$$35$F$35$$35$10) (= VV$35$$35$F$35$$35$10 GHC.Types.False)) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x ds_d266) (and (= lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x ds_d266) lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$10 (= ds_d265 ds_d266))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265) (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265) (and (= lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w ds_d265) (not lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w) (not lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w) (not lq_anf$36$$35$$35$7205759403792801692$35$$35$d26w)) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x ds_d266) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x ds_d266) (and VV$35$$35$F$35$$35$11 (= VV$35$$35$F$35$$35$11 GHC.Types.True)) (not GHC.Types.False) (and (= lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x ds_d266) (not lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x) (not lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x) (not lq_anf$36$$35$$35$7205759403792801693$35$$35$d26x)) GHC.Types.True))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 (= ds_d265 ds_d266))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792801691$35$$35$d26v (or  a$35$$35$a1S6 b$35$$35$a1S7)) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) (= VV$35$$35$F$35$$35$12 (=> a$35$$35$a1S6 lq_anf$36$$35$$35$7205759403792801691$35$$35$d26v)) GHC.Types.True))
(push 1)
(assert (not VV$35$$35$F$35$$35$12))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792801690$35$$35$d26u (or  a$35$$35$aRj a$35$$35$aRj)) (not GHC.Types.False) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= VV$35$$35$F$35$$35$13 (=> lq_anf$36$$35$$35$7205759403792801690$35$$35$d26u a$35$$35$aRj))))
(push 1)
(assert (not VV$35$$35$F$35$$35$13))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) (and (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t ds_d26g) GHC.Types.True (not GHC.Types.False) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t ds_d26g) (and (= lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t ds_d26g) lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t) (and VV$35$$35$F$35$$35$14 (= VV$35$$35$F$35$$35$14 GHC.Types.True))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$14 (=> ds_d26f ds_d26g))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) (and (= lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r ds_d26f) lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r lq_anf$36$$35$$35$7205759403792801687$35$$35$d26r) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t ds_d26g) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t ds_d26g) (not GHC.Types.False) (and (= lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t ds_d26g) (not lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t) (not lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t) (not lq_anf$36$$35$$35$7205759403792801689$35$$35$d26t)) GHC.Types.True (and (not VV$35$$35$F$35$$35$15) (= VV$35$$35$F$35$$35$15 GHC.Types.False))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$15 (=> ds_d26f ds_d26g))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(exit)
