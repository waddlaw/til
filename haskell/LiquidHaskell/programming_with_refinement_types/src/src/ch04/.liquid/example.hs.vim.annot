1:1-1:1::Main.$trModule :: "GHC.Types.Module"
9:1-9:9::Main.twoLangs :: "{v : (Data.Vector.Vector [GHC.Types.Char]) | vlen v == 2}"
9:12-9:46::lq_anf$##7205759403792805790 :: "[[GHC.Types.Char]]"
23:1-23:5::Main.head :: "{v : (Data.Vector.Vector a) | 0 < vlen v} -> a"
23:6-23:9::vec :: "{v : (Data.Vector.Vector a) | 0 < vlen v}"
23:12-23:19::lq_anf$##7205759403792805791 :: "{v : GHC.Types.Int | v == (0 : int)}"
27:1-27:6::Main.head' :: "(Data.Vector.Vector a) -> (GHC.Base.Maybe a)"
27:7-27:10::vec :: "(Data.Vector.Vector a)"
28:5-28:9::_ :: "(Data.Vector.Vector a) -> GHC.Types.Bool"
29:17-29:34::lq_anf$##7205759403792805794 :: "x1:a -> {v : (GHC.Base.Maybe a) | fromJust v == x1\n                                  && (isJust v <=> true)}"
29:24-29:34::lq_anf$##7205759403792805795 :: "a"
39:1-39:13::Main.unsafeLookup :: "x1:{v : GHC.Types.Int | v >= 0} -> {v : (Data.Vector.Vector a) | x1 == vlen v\n                                                                 && vlen v < x1} -> a"
39:14-39:19::index :: "{v : GHC.Types.Int | v >= 0}"
39:20-39:23::vec :: "{v : (Data.Vector.Vector a) | index == vlen v\n                              && vlen v < index}"
39:26-39:37::index :: "{v : GHC.Types.Int | v >= 0\n                     && v == index}"
43:1-43:11::Main.safeLookup :: "(Data.Vector.Vector a) -> GHC.Types.Int -> (GHC.Base.Maybe a)"
43:12-43:13::x :: "(Data.Vector.Vector a)"
43:14-43:15::i :: "GHC.Types.Int"
44:16-44:21::lq_anf$##7205759403792805801 :: "a"
47:5-47:7::ok :: "GHC.Types.Bool"
47:10-47:16::lq_anf$##7205759403792805797 :: "GHC.Types.Bool"
47:12-47:14::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 <= x2}"
47:17-47:19::_ :: "{v : x1:GHC.Types.Bool -> x2:GHC.Types.Bool -> {v : GHC.Types.Bool | v <=> x1\n                                                                           && x2} | v == GHC.Classes.&&}"
47:20-47:34::lq_anf$##7205759403792805799 :: "GHC.Types.Bool"
47:22-47:23::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 < x2}"
54:1-54:10::Main.vectorSum :: "(Data.Vector.Vector GHC.Types.Int) -> GHC.Types.Int"
54:11-54:14::vec :: "(Data.Vector.Vector GHC.Types.Int)"
54:17-54:19::_ :: "{v : GHC.Types.Int -> {v : GHC.Types.Int | v <= sz\n                                           && v >= 0} -> GHC.Types.Int | v == go}"
56:5-56:7::go :: "GHC.Types.Int -> {VV : GHC.Types.Int | VV <= sz\n                                       && VV >= 0} -> GHC.Types.Int"
56:8-56:11::acc :: "GHC.Types.Int"
56:12-56:13::i :: "{VV : GHC.Types.Int | VV <= sz\n                      && VV >= 0}"
57:9-57:15::lq_anf$##7205759403792805802 :: "{v : GHC.Types.Bool | v <=> i < sz}"
57:11-57:12::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 < x2}"
57:18-57:20::go :: "GHC.Types.Int -> {VV : GHC.Types.Int | VV <= sz\n                                       && VV >= 0} -> GHC.Types.Int"
57:22-57:37::lq_anf$##7205759403792805805 :: "GHC.Types.Int"
57:26-57:27::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
57:29-57:36::lq_anf$##7205759403792805804 :: "GHC.Types.Int"
57:40-57:45::lq_anf$##7205759403792805807 :: "GHC.Types.Int"
57:42-57:43::_ :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"
59:5-59:7::sz :: "{v : GHC.Types.Int | v >= 0\n                     && v == len vec}"
59:10-59:16::_ :: "xs:(Data.Vector.Vector GHC.Types.Int) -> {v : GHC.Types.Int | v >= 0\n                                                              && v == len xs}"