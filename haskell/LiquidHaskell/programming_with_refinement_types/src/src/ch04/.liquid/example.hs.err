{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":57,"endLine":57,"endCol":12,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 < x2}"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":14,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["vec","(Data.Vector.Vector GHC.Types.Int)"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":14,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 <= x2}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":36,"startCol":29,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805804","GHC.Types.Int"]]],[{"spanInfo":{"startLine":28,"endLine":28,"endCol":13,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805792","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":9,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.twoLangs","{v : (Data.Vector.Vector [GHC.Types.Char]) | vlen v == 2}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":20,"startCol":18,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["go","GHC.Types.Int -> {VV : GHC.Types.Int | VV <= sz\n                                       && VV >= 0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":34,"startCol":24,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805795","a"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":7,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["ok","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":19,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805791","{v : GHC.Types.Int | v == (0 : int)}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":27,"startCol":26,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":43,"startCol":42,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":37,"startCol":26,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["index","{v : GHC.Types.Int | v >= 0\n                     && v == index}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":34,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805794","x1:a -> {v : (GHC.Base.Maybe a) | fromJust v == x1\n                                  && (isJust v <=> true)}"]]],[{"spanInfo":{"startLine":44,"endLine":44,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805801","a"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":34,"startCol":20,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805799","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":5,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.head","{v : (Data.Vector.Vector a) | 0 < vlen v} -> a"]]],[{"spanInfo":{"startLine":43,"endLine":43,"endCol":13,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["x","(Data.Vector.Vector a)"]]],[{"spanInfo":{"startLine":28,"endLine":28,"endCol":9,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"(Data.Vector.Vector a) -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":10,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.vectorSum","(Data.Vector.Vector GHC.Types.Int) -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":43,"endLine":43,"endCol":11,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.safeLookup","(Data.Vector.Vector a) -> GHC.Types.Int -> (GHC.Base.Maybe a)"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":46,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805790","[[GHC.Types.Char]]"]]],[{"spanInfo":{"startLine":56,"endLine":56,"endCol":11,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["acc","GHC.Types.Int"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":7,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["sz","{v : GHC.Types.Int | v >= 0\n                     && v == len vec}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":45,"startCol":40,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805807","GHC.Types.Int"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":21,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805808","{v : GHC.Types.Int | v == (0 : int)}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":23,"startCol":20,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["vec","{v : (Data.Vector.Vector a) | index == vlen v\n                              && vlen v < index}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":20,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int | v >= 0\n                     && v == len vec}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":16,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805797","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":23,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 < x2}"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":23,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805809","{v : GHC.Types.Int | v == (0 : int)}"]]],[{"spanInfo":{"startLine":27,"endLine":27,"endCol":6,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.head'","(Data.Vector.Vector a) -> (GHC.Base.Maybe a)"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":19,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"{v : x1:GHC.Types.Bool -> x2:GHC.Types.Bool -> {v : GHC.Types.Bool | v <=> x1\n                                                                           && x2} | v == GHC.Classes.&&}"]]],[{"spanInfo":{"startLine":56,"endLine":56,"endCol":7,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["go","GHC.Types.Int -> {VV : GHC.Types.Int | VV <= sz\n                                       && VV >= 0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":9,"startCol":6,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["vec","{v : (Data.Vector.Vector a) | 0 < vlen v}"]]],[{"spanInfo":{"startLine":27,"endLine":27,"endCol":10,"startCol":7,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["vec","(Data.Vector.Vector a)"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":16,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"xs:(Data.Vector.Vector GHC.Types.Int) -> {v : GHC.Types.Int | v >= 0\n                                                              && v == len xs}"]]],[{"spanInfo":{"startLine":56,"endLine":56,"endCol":13,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["i","{VV : GHC.Types.Int | VV <= sz\n                      && VV >= 0}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":15,"startCol":9,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805802","{v : GHC.Types.Bool | v <=> i < sz}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":13,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.unsafeLookup","x1:{v : GHC.Types.Int | v >= 0} -> {v : (Data.Vector.Vector a) | x1 == vlen v\n                                                                 && vlen v < x1} -> a"]]],[{"spanInfo":{"startLine":43,"endLine":43,"endCol":15,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["i","GHC.Types.Int"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":19,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int -> {v : GHC.Types.Int | v <= sz\n                                           && v >= 0} -> GHC.Types.Int | v == go}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":37,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805805","GHC.Types.Int"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":19,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["index","{v : GHC.Types.Int | v >= 0}"]]]],"o_templs":[[{"spanInfo":{"startLine":57,"endLine":57,"endCol":12,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"lq_tmp$x##803:{lq_tmp$x##808 : GHC.Types.Int^\"lq_tmp$x##807\" | $k_##806[VV##805:=lq_tmp$x##808][lq_tmp$x##802:=GHC.Classes.$fOrdInt]} -> lq_tmp$x##804:{lq_tmp$x##808 : GHC.Types.Int^\"lq_tmp$x##807\" | $k_##806[VV##805:=lq_tmp$x##808][lq_tmp$x##802:=GHC.Classes.$fOrdInt]} -> {lq_tmp$x##798 : GHC.Types.Bool | lq_tmp$x##798 <=> lq_tmp$x##803 < lq_tmp$x##804}"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":14,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["vec","(Data.Vector.Vector GHC.Types.Int)"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":14,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"lq_tmp$x##649:{lq_tmp$x##654 : GHC.Types.Int^\"lq_tmp$x##653\" | $k_##652[lq_tmp$x##648:=GHC.Classes.$fOrdInt][VV##651:=lq_tmp$x##654]} -> lq_tmp$x##650:{lq_tmp$x##654 : GHC.Types.Int^\"lq_tmp$x##653\" | $k_##652[lq_tmp$x##648:=GHC.Classes.$fOrdInt][VV##651:=lq_tmp$x##654]} -> {lq_tmp$x##644 : GHC.Types.Bool | lq_tmp$x##644 <=> lq_tmp$x##649 <= lq_tmp$x##650}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":36,"startCol":29,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805804","{lq_tmp$x##838 : GHC.Types.Int^\"lq_tmp$x##837\" | $k_##836[lq_tmp$x##834:=i##a2Cb][lq_tmp$x##833:=vec##a2C7][VV##835:=lq_tmp$x##838]}"]]],[{"spanInfo":{"startLine":28,"endLine":28,"endCol":13,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805792","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":9,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.twoLangs","{lq_tmp$x##3 : (Data.Vector.Vector [GHC.Types.Char]) | vlen lq_tmp$x##3 == 2}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":20,"startCol":18,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["go","lq_tmp$x##789:{VV##778 : GHC.Types.Int^\"lq_tmp$x##780\" | $k_##779} -> lq_tmp$x##790:{VV##781 : GHC.Types.Int^\"lq_tmp$x##783\" | $k_##782[lq_tmp$x##787:=lq_tmp$x##789][acc##a2Ca:=lq_tmp$x##789]} -> {VV##784 : GHC.Types.Int^\"lq_tmp$x##786\" | $k_##785[lq_tmp$x##787:=lq_tmp$x##789][lq_tmp$x##788:=lq_tmp$x##790][i##a2Cb:=lq_tmp$x##790][acc##a2Ca:=lq_tmp$x##789]}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":34,"startCol":24,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805795","{lq_tmp$x##554 : a^\"lq_tmp$x##553\" \"lq_tmp$x##58\" | $k_##552[lq_tmp$x##550:=vec##a1kr][VV##551:=lq_tmp$x##554]}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":7,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["ok","{lq_tmp$x##694 : GHC.Types.Bool | lq_tmp$x##694 <=> lq_anf$##7205759403792805797##d3aJ\n                                                    && lq_anf$##7205759403792805799##d3aL}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":19,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805791","{lq_tmp$x##483 : GHC.Types.Int | lq_tmp$x##483 == (0 : int)}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":27,"startCol":26,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"lq_tmp$x##852:GHC.Types.Int -> lq_tmp$x##853:GHC.Types.Int -> {lq_tmp$x##855 : GHC.Types.Int^\"lq_tmp$x##854\" | lq_tmp$x##855 == lq_tmp$x##852 + lq_tmp$x##853}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":43,"startCol":42,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"lq_tmp$x##876:GHC.Types.Int -> lq_tmp$x##877:GHC.Types.Int -> {lq_tmp$x##879 : GHC.Types.Int^\"lq_tmp$x##878\" | lq_tmp$x##879 == lq_tmp$x##876 + lq_tmp$x##877}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":37,"startCol":26,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["index","{lq_tmp$x##620 : GHC.Types.Int | lq_tmp$x##620 >= 0\n                                 && lq_tmp$x##620 == index##a1Bl}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":34,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805794","lq_tmp$x##540:{lq_tmp$x##544 : a^\"lq_tmp$x##543\" | $k_##542[VV##541:=lq_tmp$x##544]} -> {lq_tmp$x##538 : (GHC.Base.Maybe {lq_tmp$x##544 : a^\"lq_tmp$x##543\" | $k_##542[VV##541:=lq_tmp$x##544]}) | fromJust lq_tmp$x##538 == lq_tmp$x##540\n                                                                                                                                                                                                   && (isJust lq_tmp$x##538 <=> true)}"]]],[{"spanInfo":{"startLine":44,"endLine":44,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805801","{lq_tmp$x##731 : a^\"lq_tmp$x##730\" | $k_##729[lq_tmp$x##726:=x##a1Bn][VV##728:=lq_tmp$x##731][lq_tmp$x##727:=i##a1Bo]}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":34,"startCol":20,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805799","{lq_tmp$x##676 : GHC.Types.Bool | lq_tmp$x##676 <=> i##a1Bo < lq_anf$##7205759403792805798##d3aK}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":5,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.head","lq_tmp$x##480:{lq_tmp$x##12 : (Data.Vector.Vector a) | 0 < vlen lq_tmp$x##12} -> a"]]],[{"spanInfo":{"startLine":43,"endLine":43,"endCol":13,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["x","(Data.Vector.Vector a)"]]],[{"spanInfo":{"startLine":28,"endLine":28,"endCol":9,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"lq_tmp$x##87:(Data.Vector.Vector {lq_tmp$x##525 : a^\"lq_tmp$x##524\" \"lq_tmp$x##89\" | $k_##523[VV##522:=lq_tmp$x##525]}) -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":10,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.vectorSum","lq_tmp$x##756:(Data.Vector.Vector GHC.Types.Int) -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":43,"endLine":43,"endCol":11,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.safeLookup","lq_tmp$x##630:(Data.Vector.Vector a) -> lq_tmp$x##631:GHC.Types.Int -> (GHC.Base.Maybe a)"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":46,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805790","{lq_tmp$x##389 : [{lq_tmp$x##410 : [{lq_tmp$x##407 : GHC.Types.Char^\"lq_tmp$x##399\" | $k_##398[lq_tmp$x##393:=lq_anf$##7205759403792805785##d3ax][lq_tmp$x##394:=lq_anf$##7205759403792805789##d3aB][VV##404:=lq_tmp$x##410][VV##397:=lq_tmp$x##407]}]^\"lq_tmp$x##406\" | $k_##405[lq_tmp$x##393:=lq_anf$##7205759403792805785##d3ax][lq_tmp$x##394:=lq_anf$##7205759403792805789##d3aB][VV##404:=lq_tmp$x##410]}] | len lq_tmp$x##389 == 1 + len lq_anf$##7205759403792805789##d3aB\n                                                                                                                                                                                                                                                                                                                                                                                                                    && tail lq_tmp$x##389 == lq_anf$##7205759403792805789##d3aB\n                                                                                                                                                                                                                                                                                                                                                                                                                    && head lq_tmp$x##389 == lq_anf$##7205759403792805785##d3ax}"]]],[{"spanInfo":{"startLine":56,"endLine":56,"endCol":11,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["acc","{VV##778 : GHC.Types.Int^\"lq_tmp$x##780\" | $k_##779}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":7,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["sz","{lq_tmp$x##763 : GHC.Types.Int | lq_tmp$x##763 >= 0\n                                 && lq_tmp$x##763 == len vec##a2C7}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":45,"startCol":40,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805807","{lq_tmp$x##879 : GHC.Types.Int^\"lq_tmp$x##878\" | lq_tmp$x##879 == i##a2Cb + lq_anf$##7205759403792805806##d3aS}"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":21,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805808","{lq_tmp$x##904 : GHC.Types.Int | lq_tmp$x##904 == (0 : int)}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":23,"startCol":20,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["vec","{v : (Data.Vector.Vector a) | index##a1Bl == vlen v\n                              && vlen v < index##a1Bl}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":20,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##763 : GHC.Types.Int | lq_tmp$x##763 >= 0\n                                 && lq_tmp$x##763 == len vec##a2C7}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":16,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805797","{lq_tmp$x##644 : GHC.Types.Bool | lq_tmp$x##644 <=> lq_anf$##7205759403792805796##d3aI <= i##a1Bo}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":23,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"lq_tmp$x##681:{lq_tmp$x##686 : GHC.Types.Int^\"lq_tmp$x##685\" | $k_##684[lq_tmp$x##680:=GHC.Classes.$fOrdInt][VV##683:=lq_tmp$x##686]} -> lq_tmp$x##682:{lq_tmp$x##686 : GHC.Types.Int^\"lq_tmp$x##685\" | $k_##684[lq_tmp$x##680:=GHC.Classes.$fOrdInt][VV##683:=lq_tmp$x##686]} -> {lq_tmp$x##676 : GHC.Types.Bool | lq_tmp$x##676 <=> lq_tmp$x##681 < lq_tmp$x##682}"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":23,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805809","{lq_tmp$x##910 : GHC.Types.Int | lq_tmp$x##910 == (0 : int)}"]]],[{"spanInfo":{"startLine":27,"endLine":27,"endCol":6,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.head'","lq_tmp$x##507:(Data.Vector.Vector a) -> (GHC.Base.Maybe a)"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":19,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##696 : lq_tmp$x##697:GHC.Types.Bool -> lq_tmp$x##698:GHC.Types.Bool -> {lq_tmp$x##694 : GHC.Types.Bool | lq_tmp$x##694 <=> lq_tmp$x##697\n                                                                                                                                     && lq_tmp$x##698} | lq_tmp$x##696 == GHC.Classes.&&}"]]],[{"spanInfo":{"startLine":56,"endLine":56,"endCol":7,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["go","lq_tmp$x##789:{VV##778 : GHC.Types.Int^\"lq_tmp$x##780\" | $k_##779} -> lq_tmp$x##790:{VV##781 : GHC.Types.Int^\"lq_tmp$x##783\" | $k_##782[lq_tmp$x##787:=lq_tmp$x##789][acc##a2Ca:=lq_tmp$x##789]} -> {VV##784 : GHC.Types.Int^\"lq_tmp$x##786\" | $k_##785[lq_tmp$x##787:=lq_tmp$x##789][lq_tmp$x##788:=lq_tmp$x##790][i##a2Cb:=lq_tmp$x##790][acc##a2Ca:=lq_tmp$x##789]}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":9,"startCol":6,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["vec","{lq_tmp$x##12 : (Data.Vector.Vector a) | 0 < vlen lq_tmp$x##12}"]]],[{"spanInfo":{"startLine":27,"endLine":27,"endCol":10,"startCol":7,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["vec","(Data.Vector.Vector a)"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":16,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"xs:(Data.Vector.Vector {lq_tmp$x##774 : GHC.Types.Int^\"lq_tmp$x##773\" | $k_##772[VV##771:=lq_tmp$x##774]}) -> {lq_tmp$x##763 : GHC.Types.Int | lq_tmp$x##763 >= 0\n                                                                                                                                               && lq_tmp$x##763 == len xs}"]]],[{"spanInfo":{"startLine":56,"endLine":56,"endCol":13,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["i","{VV##781 : GHC.Types.Int^\"lq_tmp$x##783\" | $k_##782[lq_tmp$x##787:=acc##a2Ca][acc##a2Ca:=acc##a2Ca][lq_tmp$x##789:=acc##a2Ca]}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":15,"startCol":9,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805802","{lq_tmp$x##798 : GHC.Types.Bool | lq_tmp$x##798 <=> i##a2Cb < sz##a2C9}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":13,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["Main.unsafeLookup","lq_tmp$x##602:{lq_tmp$x##0 : GHC.Types.Int | lq_tmp$x##0 >= 0} -> lq_tmp$x##603:{v : (Data.Vector.Vector a) | lq_tmp$x##602 == vlen v\n                                                                                                              && vlen v < lq_tmp$x##602} -> a"]]],[{"spanInfo":{"startLine":43,"endLine":43,"endCol":15,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["i","GHC.Types.Int"]]],[{"spanInfo":{"startLine":54,"endLine":54,"endCol":19,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##919 : lq_tmp$x##920:{lq_tmp$x##915 : GHC.Types.Int^\"lq_tmp$x##780\" | $k_##779[lq_tmp$x##895:=lq_tmp$x##915][VV##778:=lq_tmp$x##915]} -> lq_tmp$x##921:{lq_tmp$x##916 : GHC.Types.Int^\"lq_tmp$x##783\" | $k_##782[lq_tmp$x##787:=lq_tmp$x##920][lq_tmp$x##896:=lq_tmp$x##916][VV##781:=lq_tmp$x##916][acc##a2Ca:=lq_tmp$x##920][lq_tmp$x##789:=lq_tmp$x##920][lq_tmp$x##900:=lq_tmp$x##920]} -> {lq_tmp$x##917 : GHC.Types.Int^\"lq_tmp$x##786\" | $k_##785[lq_tmp$x##790:=lq_tmp$x##921][lq_tmp$x##901:=lq_tmp$x##921][lq_tmp$x##787:=lq_tmp$x##920][lq_tmp$x##788:=lq_tmp$x##921][lq_tmp$x##897:=lq_tmp$x##917][i##a2Cb:=lq_tmp$x##921][acc##a2Ca:=lq_tmp$x##920][VV##784:=lq_tmp$x##917][lq_tmp$x##789:=lq_tmp$x##920][lq_tmp$x##900:=lq_tmp$x##920]} | lq_tmp$x##919 == go##a2EW\nlq_tmp$x##919 == go##a2C8}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":37,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["lq_anf$##7205759403792805805","{lq_tmp$x##855 : GHC.Types.Int^\"lq_tmp$x##854\" | lq_tmp$x##855 == acc##a2Ca + lq_anf$##7205759403792805804##d3aQ}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":19,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true},[["index","{lq_tmp$x##0 : GHC.Types.Int | lq_tmp$x##0 >= 0}"]]]],"o_bots":[],"o_result":{"tag":"Unsafe","contents":[{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : Int | v == acc + ?a\n                    && v == ?b}\n \n  not a subtype of Required type\n    VV : {VV : Int | VV < acc\n                     && VV >= 0}\n \n  In Context\n    ?b : {?b : Int | ?b == acc + ?a}\n     \n    ?a : Int\n     \n    acc : Int","pos":{"spanInfo":{"startLine":57,"endLine":57,"endCol":37,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : Int | v <= sz\n                    && v >= 0\n                    && v == i}\n \n  not a subtype of Required type\n    VV : {VV : Int | VV >= 0\n                     && VV < vlen vec}\n \n  In Context\n    sz : {sz : Int | sz >= 0\n                     && sz == len vec}\n     \n    vec : {vec : (Vector Int) | 0 <= vlen vec}\n     \n    i : {i : Int | i <= sz\n                   && i >= 0}","pos":{"spanInfo":{"startLine":57,"endLine":57,"endCol":36,"startCol":29,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch04/example.hs"},"realSpan":true}}]}}