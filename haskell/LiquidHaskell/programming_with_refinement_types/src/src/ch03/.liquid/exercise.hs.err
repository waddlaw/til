{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":29,"endLine":29,"endCol":19,"startCol":18,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"x1:GHC.Integer.Type.Integer -> x2:GHC.Integer.Type.Integer -> {v : GHC.Integer.Type.Integer | v == x1 + x2}"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":7,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.divide","GHC.Types.Int -> {v : GHC.Types.Int | v /= 0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":8,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.lAssert","{v : GHC.Types.Bool | v} -> a -> a"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":24,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["n","{v : GHC.Types.Int | v >= 0\n                     && v == n}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.yes","()"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":30,"startCol":7,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["GHC.Tuple.()","{v : () | v == GHC.Tuple.()}"]]],[{"spanInfo":{"startLine":27,"endLine":27,"endCol":48,"startCol":19,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["lq_anf$##7205759403792803638","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":26,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["lq_anf$##7205759403792803643","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":19,"endLine":19,"endCol":15,"startCol":9,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"xs:[GHC.Types.Int] -> {v : GHC.Types.Int | v >= 0\n                                           && v == len xs}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":34,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["lq_anf$##7205759403792803651","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":23,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["ds_d2Bg","{v : GHC.Types.Int | v /= 0}"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":9,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":16,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"[GHC.Types.Int] -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":19,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"GHC.Types.Int"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":10,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["total","GHC.Types.Int"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":24,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"x1:GHC.Integer.Type.Integer -> x2:GHC.Integer.Type.Integer -> {v : GHC.Types.Bool | v <=> x1 == x2}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":27,"startCol":7,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"() -> ()"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:{v : GHC.Types.Int | v /= 0} -> {v : GHC.Types.Int | v == x1 / x2\n                                                                            && (x1 >= 0\n                                                                                && x2 >= 0 => v >= 0)\n                                                                            && (x1 >= 0\n                                                                                && x2 >= 1 => v <= x1)\n                                                                            && (1 < x2 => v < x1)\n                                                                            && (x2 >= 1 => v <= x1)}"]]],[{"spanInfo":{"startLine":4,"endLine":4,"endCol":16,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"{v : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":16,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int -> {v : GHC.Types.Int | v /= 0} -> GHC.Types.Int | v == Main.divide}"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":15,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":22,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int | v /= 0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["lq_anf$##7205759403792803641","GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.avg","[GHC.Types.Int] -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":4,"endLine":4,"endCol":20,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["msg","{v : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":19,"endLine":19,"endCol":18,"startCol":9,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":19,"endLine":19,"endCol":6,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["n","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":4,"endLine":4,"endCol":8,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["msg","{VV : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":4,"endLine":4,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.die","{VV : [GHC.Types.Char] | false} -> a"]]]],"o_templs":[[{"spanInfo":{"startLine":29,"endLine":29,"endCol":19,"startCol":18,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"lq_tmp$x##668:GHC.Integer.Type.Integer -> lq_tmp$x##669:GHC.Integer.Type.Integer -> {lq_tmp$x##671 : GHC.Integer.Type.Integer^\"lq_tmp$x##670\" | lq_tmp$x##671 == lq_tmp$x##668 + lq_tmp$x##669}"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":7,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.divide","lq_tmp$x##742:GHC.Types.Int -> lq_tmp$x##743:{lq_tmp$x##12 : GHC.Types.Int | lq_tmp$x##12 /= 0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":8,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.lAssert","lq_tmp$x##601:{v : GHC.Types.Bool | v} -> lq_tmp$x##602:p -> p"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":24,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["n","{lq_tmp$x##955 : GHC.Types.Int | lq_tmp$x##955 >= 0\n                                 && lq_tmp$x##955 == len ds_d2Bl\n                                 && lq_tmp$x##955 == n##a10s}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.yes","()"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":30,"startCol":7,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["GHC.Tuple.()","{lq_tmp$x##711 : ()^\"lq_tmp$x##40\" | lq_tmp$x##711 == GHC.Tuple.()}"]]],[{"spanInfo":{"startLine":27,"endLine":27,"endCol":48,"startCol":19,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["lq_anf$##7205759403792803638","{lq_tmp$x##618 : [GHC.Types.Char] | lq_tmp$x##618 ~~ lq_anf$##7205759403792803637##d2BT\n                                    && len lq_tmp$x##618 == strLen lq_anf$##7205759403792803637##d2BT}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":26,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["lq_anf$##7205759403792803643","{lq_tmp$x##683 : GHC.Types.Bool | lq_tmp$x##683 <=> lq_anf$##7205759403792803641##d2BX == lq_anf$##7205759403792803642##d2BY}"]]],[{"spanInfo":{"startLine":19,"endLine":19,"endCol":15,"startCol":9,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"xs:[{lq_tmp$x##908 : GHC.Types.Int^\"lq_tmp$x##907\" | $k_##906[VV##905:=lq_tmp$x##908]}] -> {lq_tmp$x##891 : GHC.Types.Int | lq_tmp$x##891 >= 0\n                                                                                                                            && lq_tmp$x##891 == len xs}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":34,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["lq_anf$##7205759403792803651","{lq_tmp$x##788 : [GHC.Types.Char] | lq_tmp$x##788 ~~ lq_anf$##7205759403792803650##d2C6\n                                    && len lq_tmp$x##788 == strLen lq_anf$##7205759403792803650##d2C6}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":23,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["ds_d2Bg","{lq_tmp$x##779 : GHC.Types.Int | lq_tmp$x##779 /= 0\n                                 && lq_tmp$x##779 == ds_d2Bg}"]]],[{"spanInfo":{"startLine":8,"endLine":8,"endCol":9,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":16,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"lq_tmp$x##75:[GHC.Types.Int] -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":19,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"GHC.Types.Int"]]],[{"spanInfo":{"startLine":18,"endLine":18,"endCol":10,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["total","GHC.Types.Int"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":24,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"lq_tmp$x##688:{lq_tmp$x##693 : GHC.Integer.Type.Integer^\"lq_tmp$x##692\" | $k_##691[lq_tmp$x##687:=GHC.Integer.Type.$fEqInteger][VV##690:=lq_tmp$x##693]} -> lq_tmp$x##689:{lq_tmp$x##693 : GHC.Integer.Type.Integer^\"lq_tmp$x##692\" | $k_##691[lq_tmp$x##687:=GHC.Integer.Type.$fEqInteger][VV##690:=lq_tmp$x##693]} -> {lq_tmp$x##683 : GHC.Types.Bool | lq_tmp$x##683 <=> lq_tmp$x##688 == lq_tmp$x##689}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":27,"startCol":7,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"lq_tmp$x##705:{lq_tmp$x##709 : ()^\"lq_tmp$x##708\" | $k_##707[VV##706:=lq_tmp$x##709][lq_tmp$x##704:=lq_anf$##7205759403792803643##d2BZ]} -> {lq_tmp$x##709 : ()^\"lq_tmp$x##708\" | $k_##707[VV##706:=lq_tmp$x##709][lq_tmp$x##704:=lq_anf$##7205759403792803643##d2BZ]}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"lq_tmp$x##772:GHC.Types.Int -> lq_tmp$x##773:{lq_tmp$x##775 : GHC.Types.Int^\"lq_tmp$x##774\" | lq_tmp$x##775 /= 0} -> {lq_tmp$x##775 : GHC.Types.Int^\"lq_tmp$x##774\" | lq_tmp$x##775 == lq_tmp$x##772 / lq_tmp$x##773\n                                                                                                                                                                      && (lq_tmp$x##772 >= 0\n                                                                                                                                                                          && lq_tmp$x##773 >= 0 => lq_tmp$x##775 >= 0)\n                                                                                                                                                                      && (lq_tmp$x##772 >= 0\n                                                                                                                                                                          && lq_tmp$x##773 >= 1 => lq_tmp$x##775 <= lq_tmp$x##772)\n                                                                                                                                                                      && (1 < lq_tmp$x##773 => lq_tmp$x##775 < lq_tmp$x##772)\n                                                                                                                                                                      && (lq_tmp$x##773 >= 1 => lq_tmp$x##775 <= lq_tmp$x##772)}"]]],[{"spanInfo":{"startLine":4,"endLine":4,"endCol":16,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"lq_tmp$x##573:{lq_tmp$x##566 : [GHC.Types.Char] | false} -> {lq_tmp$x##583 : a^\"lq_tmp$x##582\" | $k_##581[lq_tmp$x##572:=fix$36$$36$dIP_a2lP][VV##580:=lq_tmp$x##583]}"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":16,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"{lq_tmp$x##951 : lq_tmp$x##952:GHC.Types.Int -> lq_tmp$x##953:{lq_tmp$x##948 : GHC.Types.Int | lq_tmp$x##948 /= 0} -> GHC.Types.Int | lq_tmp$x##951 == Main.divide}"]]],[{"spanInfo":{"startLine":26,"endLine":26,"endCol":15,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["x","p"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":22,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"lq_tmp$x##953:{lq_tmp$x##948 : GHC.Types.Int | lq_tmp$x##948 /= 0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["lq_anf$##7205759403792803641","{lq_tmp$x##671 : GHC.Integer.Type.Integer^\"lq_tmp$x##670\" | lq_tmp$x##671 == lq_anf$##7205759403792803639##d2BV + lq_anf$##7205759403792803640##d2BW}"]]],[{"spanInfo":{"startLine":15,"endLine":15,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.avg","lq_tmp$x##820:[GHC.Types.Int] -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":4,"endLine":4,"endCol":20,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["msg","{lq_tmp$x##594 : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":19,"endLine":19,"endCol":18,"startCol":9,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[[null,"{lq_tmp$x##891 : GHC.Types.Int | lq_tmp$x##891 >= 0\n                                 && lq_tmp$x##891 == len ds_d2Bl}"]]],[{"spanInfo":{"startLine":19,"endLine":19,"endCol":6,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["n","{lq_tmp$x##891 : GHC.Types.Int | lq_tmp$x##891 >= 0\n                                 && lq_tmp$x##891 == len ds_d2Bl}"]]],[{"spanInfo":{"startLine":4,"endLine":4,"endCol":8,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["msg","{VV : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":4,"endLine":4,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},[["Main.die","lq_tmp$x##317:{VV : [GHC.Types.Char] | false} -> a"]]]],"o_bots":[{"spanInfo":{"startLine":4,"endLine":4,"endCol":8,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true},{"spanInfo":{"startLine":4,"endLine":4,"endCol":20,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/exercise.hs"},"realSpan":true}],"o_result":{"tag":"Safe"}}