{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":79,"endLine":79,"endCol":15,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["max","GHC.Types.Int"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":25,"startCol":24,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":39,"startCol":35,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"GHC.Types.Int -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":7,"startCol":6,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["x","GHC.Types.Int"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":21,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"GHC.Types.Int -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":9,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":11,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : [GHC.Types.Char] -> (GHC.Types.IO ()) | v == System.IO.putStrLn}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":28,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804767","{v : GHC.Types.Int | v == (2 : int)}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":9,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["y","GHC.Types.Int"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":17,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804772","{v : GHC.Types.Bool | v <=> d > 0}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":53,"startCol":41,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804777","GHC.Types.Int"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":9,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.truncate","GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":26,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804754","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":54,"startCol":35,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804778","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":11,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["i","GHC.Types.Int"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":19,"startCol":18,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Integer.Type.Integer -> x2:GHC.Integer.Type.Integer -> {v : GHC.Integer.Type.Integer | v == x1 + x2}"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":10,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.cannotDie","()"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":23,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804785","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.die","{VV : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":29,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804781","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":14,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"(GHC.Types.IO GHC.Types.Int)"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":5,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.calc","(GHC.Types.IO a)"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":24,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804786","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":15,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int -> {v : GHC.Types.Int | v >= 0} | v == Main.abs}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":23,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 * x2}"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":9,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":11,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : [GHC.Types.Char] -> (GHC.Types.IO ()) | v == System.IO.putStrLn}"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":7,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.divide","GHC.Types.Int -> {v : GHC.Types.Int | v /= 0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804771","{v : GHC.Types.Int | v == (0 : int)}"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":24,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Integer.Type.Integer -> x2:GHC.Integer.Type.Integer -> {v : GHC.Types.Bool | v <=> x1 == x2}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":19,"startCol":18,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 > x2}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":39,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["max'","{v : GHC.Types.Int | v >= 0\n                     && v == max'}"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":19,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int -> GHC.Types.Int -> [GHC.Types.Char] | v == Main.result}"]]],[{"spanInfo":{"startLine":61,"endLine":67,"endCol":7,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804789","(GHC.Types.IO a)"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":20,"startCol":19,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":35,"startCol":27,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int -> {v : GHC.Types.Int | v /= 0} -> GHC.Types.Int | v == Main.divide}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":8,"startCol":7,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 < x2}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":31,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804769","GHC.Types.Int"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":11,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["d","GHC.Types.Int"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":11,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["z","GHC.Types.Int"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":13,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int -> {v : GHC.Types.Int | v >= 0} | v == Main.abs}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":6,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":54,"startCol":20,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804776","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":5,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.zero","{v : GHC.Types.Int | v < 100\n                     && v mod 2 == 0\n                     && v >= 0\n                     && v == 0}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":29,"startCol":28,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":16,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":40,"startCol":20,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804757","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":11,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.isPositive","x1:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 > 0}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":4,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["d","GHC.Types.Int"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":34,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804765","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":13,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["x","GHC.Types.Int"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":9,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["y","GHC.Types.Int"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":7,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.result","GHC.Types.Int -> GHC.Types.Int -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":31,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804784","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":31,"endLine":33,"endCol":22,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804755","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":4,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":11,"endLine":11,"endCol":6,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.three","{v : GHC.Types.Int | v /= 0}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":15,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":22,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804793","{v : GHC.Types.Int | v == (0 : int)}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":8,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["msg","{VV : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:{v : GHC.Types.Int | v /= 0} -> {v : GHC.Types.Int | v == x1 / x2\n                                                                            && (x1 >= 0\n                                                                                && x2 >= 0 => v >= 0)\n                                                                            && (x1 >= 0\n                                                                                && x2 >= 1 => v <= x1)\n                                                                            && (1 < x2 => v < x1)\n                                                                            && (x2 >= 1 => v <= x1)}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":5,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.avg3","GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":23,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["ds_d2Td","{v : GHC.Types.Int | v /= 0}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":20,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int -> {v : GHC.Types.Int | v /= 0} -> GHC.Types.Int | v == Main.divide}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":60,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804774","{v : GHC.Prim.Addr# | v == \"Humph, please enter positive denominator!\"}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":27,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804768","{v : GHC.Types.Int | v == x + y}"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":15,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804794","{v : GHC.Types.Bool | v <=> i' <= max'}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":38,"startCol":25,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804796","GHC.Types.Int"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":51,"startCol":43,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int -> {v : GHC.Types.Int | v /= 0} -> GHC.Types.Int | v == Main.divide}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":20,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["msg","{v : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":10,"endLine":10,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.two","{v : GHC.Types.Int | v /= 0}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":14,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"(GHC.Types.IO GHC.Types.Int)"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":7,"startCol":6,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["x","GHC.Types.Int"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":25,"startCol":20,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804766","{v : GHC.Types.Int | v == x + y}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":23,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":34,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804770","{v : GHC.Types.Int | v == (3 : int)}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":11,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : [GHC.Types.Char] -> (GHC.Types.IO ()) | v == System.IO.putStrLn}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.abs","GHC.Types.Int -> {v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804752","GHC.Integer.Type.Integer"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":9,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["max'","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":5,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.avg2","GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":10,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"x1:GHC.Types.Int -> x2:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 <= x2}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.one","{v : GHC.Types.Int | v /= 0}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":18,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int -> {v : GHC.Types.Int | v /= 0} -> GHC.Types.Int | v == Main.divide}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":15,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : x1:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> x1 > 0} | v == Main.isPositive}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":7,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["i'","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":10,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804791","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":19,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{v : GHC.Types.Int | v >= 0}"]]]],"o_templs":[[{"spanInfo":{"startLine":79,"endLine":79,"endCol":15,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["max","GHC.Types.Int"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":25,"startCol":24,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##1000:GHC.Types.Int -> lq_tmp$x##1001:GHC.Types.Int -> {lq_tmp$x##1003 : GHC.Types.Int^\"lq_tmp$x##1002\" | lq_tmp$x##1003 == lq_tmp$x##1000 + lq_tmp$x##1001}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":39,"startCol":35,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##1142:GHC.Types.Int -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":7,"startCol":6,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["x","GHC.Types.Int"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":21,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##1287:GHC.Types.Int -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":9,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":11,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1298 : lq_tmp$x##1300:[GHC.Types.Char] -> (GHC.Types.IO ()) | lq_tmp$x##1298 == System.IO.putStrLn}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":28,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804767","{lq_tmp$x##969 : GHC.Types.Int | lq_tmp$x##969 == (2 : int)}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":9,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["y","GHC.Types.Int"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":17,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804772","{lq_tmp$x##1082 : GHC.Types.Bool | lq_tmp$x##1082 <=> d##a27m > 0}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":53,"startCol":41,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804777","GHC.Types.Int"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":9,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.truncate","lq_tmp$x##1477:GHC.Types.Int -> lq_tmp$x##1478:GHC.Types.Int -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":26,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804754","{lq_tmp$x##780 : GHC.Types.Bool | lq_tmp$x##780 <=> lq_anf$##7205759403792804752##d2TS == lq_anf$##7205759403792804753##d2TT}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":54,"startCol":35,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804778","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":11,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["i","GHC.Types.Int"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":19,"startCol":18,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##765:GHC.Integer.Type.Integer -> lq_tmp$x##766:GHC.Integer.Type.Integer -> {lq_tmp$x##768 : GHC.Integer.Type.Integer^\"lq_tmp$x##767\" | lq_tmp$x##768 == lq_tmp$x##765 + lq_tmp$x##766}"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":10,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.cannotDie","()"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":23,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804785","[GHC.Types.Char]"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.die","lq_tmp$x##468:{VV : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":29,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804781","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":14,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"(GHC.Types.IO GHC.Types.Int)"]]],[{"spanInfo":{"startLine":61,"endLine":61,"endCol":5,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.calc","(GHC.Types.IO b)"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":24,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804786","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":15,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1483 : lq_tmp$x##1484:GHC.Types.Int -> {lq_tmp$x##1482 : GHC.Types.Int | lq_tmp$x##1482 >= 0} | lq_tmp$x##1483 == Main.abs}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":23,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##1539:GHC.Types.Int -> lq_tmp$x##1540:GHC.Types.Int -> {lq_tmp$x##1542 : GHC.Types.Int^\"lq_tmp$x##1541\" | lq_tmp$x##1542 == lq_tmp$x##1539 * lq_tmp$x##1540}"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":9,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":11,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1206 : lq_tmp$x##1208:[GHC.Types.Char] -> (GHC.Types.IO ()) | lq_tmp$x##1206 == System.IO.putStrLn}"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":7,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.divide","lq_tmp$x##869:GHC.Types.Int -> lq_tmp$x##870:{lq_tmp$x##15 : GHC.Types.Int | lq_tmp$x##15 /= 0} -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804771","{lq_tmp$x##1049 : GHC.Types.Int | lq_tmp$x##1049 == (0 : int)}"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":24,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##785:{lq_tmp$x##790 : GHC.Integer.Type.Integer^\"lq_tmp$x##789\" | $k_##788[VV##787:=lq_tmp$x##790][lq_tmp$x##784:=GHC.Integer.Type.$fEqInteger]} -> lq_tmp$x##786:{lq_tmp$x##790 : GHC.Integer.Type.Integer^\"lq_tmp$x##789\" | $k_##788[VV##787:=lq_tmp$x##790][lq_tmp$x##784:=GHC.Integer.Type.$fEqInteger]} -> {lq_tmp$x##780 : GHC.Types.Bool | lq_tmp$x##780 <=> lq_tmp$x##785 == lq_tmp$x##786}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":19,"startCol":18,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##1063:{lq_tmp$x##1068 : GHC.Types.Int^\"lq_tmp$x##1067\" | $k_##1066[lq_tmp$x##1062:=GHC.Classes.$fOrdInt][VV##1065:=lq_tmp$x##1068]} -> lq_tmp$x##1064:{lq_tmp$x##1068 : GHC.Types.Int^\"lq_tmp$x##1067\" | $k_##1066[lq_tmp$x##1062:=GHC.Classes.$fOrdInt][VV##1065:=lq_tmp$x##1068]} -> {lq_tmp$x##1058 : GHC.Types.Bool | lq_tmp$x##1058 <=> lq_tmp$x##1063 > lq_tmp$x##1064}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":39,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["max'","{lq_tmp$x##1545 : GHC.Types.Int | lq_tmp$x##1545 >= 0\n                                  && lq_tmp$x##1545 == max'##a2j0}"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":19,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1285 : lq_tmp$x##1286:GHC.Types.Int -> lq_tmp$x##1287:GHC.Types.Int -> [GHC.Types.Char] | lq_tmp$x##1285 == Main.result}"]]],[{"spanInfo":{"startLine":61,"endLine":67,"endCol":7,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804789","{VV##1230 : (GHC.Types.IO {VV##1227 : b^\"lq_tmp$x##1229\" | $k_##1228})^\"lq_tmp$x##1232\" | $k_##1231}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":20,"startCol":19,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##1460:GHC.Types.Int -> lq_tmp$x##1461:GHC.Types.Int -> {lq_tmp$x##1463 : GHC.Types.Int^\"lq_tmp$x##1462\" | lq_tmp$x##1463 == lq_tmp$x##1460 - lq_tmp$x##1461}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":35,"startCol":27,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1524 : lq_tmp$x##1525:GHC.Types.Int -> lq_tmp$x##1526:{lq_tmp$x##1521 : GHC.Types.Int | lq_tmp$x##1521 /= 0} -> GHC.Types.Int | lq_tmp$x##1524 == Main.divide}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":8,"startCol":7,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##1427:{lq_tmp$x##1432 : GHC.Types.Int^\"lq_tmp$x##1431\" | $k_##1430[VV##1429:=lq_tmp$x##1432][lq_tmp$x##1426:=GHC.Classes.$fOrdInt]} -> lq_tmp$x##1428:{lq_tmp$x##1432 : GHC.Types.Int^\"lq_tmp$x##1431\" | $k_##1430[VV##1429:=lq_tmp$x##1432][lq_tmp$x##1426:=GHC.Classes.$fOrdInt]} -> {lq_tmp$x##1422 : GHC.Types.Bool | lq_tmp$x##1422 <=> lq_tmp$x##1427 < lq_tmp$x##1428}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":31,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804769","{lq_tmp$x##1021 : GHC.Types.Int^\"lq_tmp$x##1020\" | lq_tmp$x##1021 == lq_anf$##7205759403792804768##d2U8 + z##a22M}"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":11,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["d","GHC.Types.Int"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":11,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["z","GHC.Types.Int"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":13,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1489 : lq_tmp$x##1490:GHC.Types.Int -> {lq_tmp$x##1488 : GHC.Types.Int | lq_tmp$x##1488 >= 0} | lq_tmp$x##1489 == Main.abs}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":6,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":54,"startCol":20,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804776","{lq_tmp$x##1116 : [GHC.Types.Char] | lq_tmp$x##1116 ~~ lq_anf$##7205759403792804775##d2Uf\n                                     && len lq_tmp$x##1116 == strLen lq_anf$##7205759403792804775##d2Uf}"]]],[{"spanInfo":{"startLine":6,"endLine":6,"endCol":5,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.zero","{lq_tmp$x##18 : GHC.Types.Int | lq_tmp$x##18 < 100\n                                && lq_tmp$x##18 mod 2 == 0\n                                && lq_tmp$x##18 >= 0\n                                && lq_tmp$x##18 == 0}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":29,"startCol":28,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##1018:GHC.Types.Int -> lq_tmp$x##1019:GHC.Types.Int -> {lq_tmp$x##1021 : GHC.Types.Int^\"lq_tmp$x##1020\" | lq_tmp$x##1021 == lq_tmp$x##1018 + lq_tmp$x##1019}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":16,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##724:{lq_tmp$x##717 : [GHC.Types.Char] | false} -> {lq_tmp$x##734 : a^\"lq_tmp$x##733\" | $k_##732[lq_tmp$x##723:=fix$36$$36$dIP_a2vJ][VV##731:=lq_tmp$x##734]}"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":40,"startCol":20,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804757","{lq_tmp$x##815 : [GHC.Types.Char] | lq_tmp$x##815 ~~ lq_anf$##7205759403792804756##d2TW\n                                    && len lq_tmp$x##815 == strLen lq_anf$##7205759403792804756##d2TW}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":11,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.isPositive","lq_tmp$x##1046:GHC.Types.Int -> {v : GHC.Types.Bool | v <=> lq_tmp$x##1046 > 0}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":4,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["d","GHC.Types.Int"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":34,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804765","{lq_tmp$x##915 : [GHC.Types.Char] | lq_tmp$x##915 ~~ lq_anf$##7205759403792804764##d2U4\n                                    && len lq_tmp$x##915 == strLen lq_anf$##7205759403792804764##d2U4}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":13,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["x","GHC.Types.Int"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":9,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["y","GHC.Types.Int"]]],[{"spanInfo":{"startLine":69,"endLine":69,"endCol":7,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.result","lq_tmp$x##1076:GHC.Types.Int -> lq_tmp$x##1077:GHC.Types.Int -> [GHC.Types.Char]"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":31,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804784","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":31,"endLine":33,"endCol":22,"startCol":13,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804755","{lq_tmp$x##796 : GHC.Types.Bool | (lq_tmp$x##796 <=> lq_anf$##7205759403792804752##d2TS == lq_anf$##7205759403792804753##d2TT)\n                                  && lq_tmp$x##796 == lq_anf$##7205759403792804754##d2TU}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":4,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":11,"endLine":11,"endCol":6,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.three","{lq_tmp$x##15 : GHC.Types.Int | lq_tmp$x##15 /= 0}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":15,"startCol":10,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1488 : GHC.Types.Int | lq_tmp$x##1488 >= 0}"]]],[{"spanInfo":{"startLine":59,"endLine":59,"endCol":22,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804793","{lq_tmp$x##1446 : GHC.Types.Int | lq_tmp$x##1446 == (0 : int)}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":8,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["msg","{VV : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##899:GHC.Types.Int -> lq_tmp$x##900:{lq_tmp$x##902 : GHC.Types.Int^\"lq_tmp$x##901\" | lq_tmp$x##902 /= 0} -> {lq_tmp$x##902 : GHC.Types.Int^\"lq_tmp$x##901\" | lq_tmp$x##902 == lq_tmp$x##899 / lq_tmp$x##900\n                                                                                                                                                                      && (lq_tmp$x##899 >= 0\n                                                                                                                                                                          && lq_tmp$x##900 >= 0 => lq_tmp$x##902 >= 0)\n                                                                                                                                                                      && (lq_tmp$x##899 >= 0\n                                                                                                                                                                          && lq_tmp$x##900 >= 1 => lq_tmp$x##902 <= lq_tmp$x##899)\n                                                                                                                                                                      && (1 < lq_tmp$x##900 => lq_tmp$x##902 < lq_tmp$x##899)\n                                                                                                                                                                      && (lq_tmp$x##900 >= 1 => lq_tmp$x##902 <= lq_tmp$x##899)}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":5,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.avg3","lq_tmp$x##985:GHC.Types.Int -> lq_tmp$x##986:GHC.Types.Int -> lq_tmp$x##987:GHC.Types.Int -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":23,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["ds_d2Td","{lq_tmp$x##906 : GHC.Types.Int | lq_tmp$x##906 /= 0\n                                 && lq_tmp$x##906 == ds_d2Td}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":20,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1037 : lq_tmp$x##1038:GHC.Types.Int -> lq_tmp$x##1039:{lq_tmp$x##1034 : GHC.Types.Int | lq_tmp$x##1034 /= 0} -> GHC.Types.Int | lq_tmp$x##1037 == Main.divide}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":60,"startCol":17,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804774","{lq_tmp$x##1094 : GHC.Prim.Addr# | lq_tmp$x##1094 == \"Humph, please enter positive denominator!\"}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":27,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804768","{lq_tmp$x##1003 : GHC.Types.Int^\"lq_tmp$x##1002\" | lq_tmp$x##1003 == x##a22K + y##a22L}"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":15,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804794","{lq_tmp$x##1497 : GHC.Types.Bool | lq_tmp$x##1497 <=> i'##a2iZ <= max'##a2j0}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":38,"startCol":25,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804796","GHC.Types.Int"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":51,"startCol":43,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1126 : lq_tmp$x##1127:GHC.Types.Int -> lq_tmp$x##1128:{lq_tmp$x##1123 : GHC.Types.Int | lq_tmp$x##1123 /= 0} -> GHC.Types.Int | lq_tmp$x##1126 == Main.divide}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":20,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["msg","{lq_tmp$x##745 : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":10,"endLine":10,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.two","{lq_tmp$x##15 : GHC.Types.Int | lq_tmp$x##15 /= 0}"]]],[{"spanInfo":{"startLine":63,"endLine":63,"endCol":14,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"(GHC.Types.IO GHC.Types.Int)"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":7,"startCol":6,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["x","GHC.Types.Int"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":25,"startCol":20,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804766","{lq_tmp$x##962 : GHC.Types.Int^\"lq_tmp$x##961\" | lq_tmp$x##962 == x##a22I + y##a22J}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":23,"startCol":22,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##959:GHC.Types.Int -> lq_tmp$x##960:GHC.Types.Int -> {lq_tmp$x##962 : GHC.Types.Int^\"lq_tmp$x##961\" | lq_tmp$x##962 == lq_tmp$x##959 + lq_tmp$x##960}"]]],[{"spanInfo":{"startLine":53,"endLine":53,"endCol":34,"startCol":14,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804770","{lq_tmp$x##1028 : GHC.Types.Int | lq_tmp$x##1028 == (3 : int)}"]]],[{"spanInfo":{"startLine":64,"endLine":64,"endCol":11,"startCol":3,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1251 : lq_tmp$x##1253:[GHC.Types.Char] -> (GHC.Types.IO ()) | lq_tmp$x##1251 == System.IO.putStrLn}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.abs","lq_tmp$x##1410:GHC.Types.Int -> {lq_tmp$x##11 : GHC.Types.Int | lq_tmp$x##11 >= 0}"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":21,"startCol":16,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804752","{lq_tmp$x##768 : GHC.Integer.Type.Integer^\"lq_tmp$x##767\" | lq_tmp$x##768 == lq_anf$##7205759403792804750##d2TQ + lq_anf$##7205759403792804751##d2TR}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":9,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["max'","{lq_tmp$x##1482 : GHC.Types.Int | lq_tmp$x##1482 >= 0}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":5,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.avg2","lq_tmp$x##946:GHC.Types.Int -> lq_tmp$x##947:GHC.Types.Int -> GHC.Types.Int"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":10,"startCol":8,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"lq_tmp$x##1502:{lq_tmp$x##1507 : GHC.Types.Int^\"lq_tmp$x##1506\" | $k_##1505[VV##1504:=lq_tmp$x##1507][lq_tmp$x##1501:=GHC.Classes.$fOrdInt]} -> lq_tmp$x##1503:{lq_tmp$x##1507 : GHC.Types.Int^\"lq_tmp$x##1506\" | $k_##1505[VV##1504:=lq_tmp$x##1507][lq_tmp$x##1501:=GHC.Classes.$fOrdInt]} -> {lq_tmp$x##1497 : GHC.Types.Bool | lq_tmp$x##1497 <=> lq_tmp$x##1502 <= lq_tmp$x##1503}"]]],[{"spanInfo":{"startLine":9,"endLine":9,"endCol":4,"startCol":1,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["Main.one","{lq_tmp$x##15 : GHC.Types.Int | lq_tmp$x##15 /= 0}"]]],[{"spanInfo":{"startLine":52,"endLine":52,"endCol":18,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##978 : lq_tmp$x##979:GHC.Types.Int -> lq_tmp$x##980:{lq_tmp$x##975 : GHC.Types.Int | lq_tmp$x##975 /= 0} -> GHC.Types.Int | lq_tmp$x##978 == Main.divide}"]]],[{"spanInfo":{"startLine":70,"endLine":70,"endCol":15,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1083 : lq_tmp$x##1084:GHC.Types.Int -> {lq_tmp$x##1082 : GHC.Types.Bool | lq_tmp$x##1082 <=> lq_tmp$x##1084 > 0} | lq_tmp$x##1083 == Main.isPositive}"]]],[{"spanInfo":{"startLine":83,"endLine":83,"endCol":7,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["i'","{lq_tmp$x##1488 : GHC.Types.Int | lq_tmp$x##1488 >= 0}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":10,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[["lq_anf$##7205759403792804791","{lq_tmp$x##1422 : GHC.Types.Bool | lq_tmp$x##1422 <=> lq_anf$##7205759403792804790##d2Uu < n##a22N}"]]],[{"spanInfo":{"startLine":84,"endLine":84,"endCol":19,"startCol":12,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},[[null,"{lq_tmp$x##1482 : GHC.Types.Int | lq_tmp$x##1482 >= 0}"]]]],"o_bots":[{"spanInfo":{"startLine":29,"endLine":29,"endCol":8,"startCol":5,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true},{"spanInfo":{"startLine":29,"endLine":29,"endCol":20,"startCol":11,"filename":"/home/bm12/repo/guchi/til/haskell/LiquidHaskell/programming_with_refinement_types/src-dir/src/ch03/example.hs"},"realSpan":true}],"o_result":{"tag":"Safe"}}